org: danielz02
app: ultimate-myillini-restful
service: flask-restful

provider:
  name: aws
  runtime: python3.7
  region: us-west-1
  stage: dev
  stackName: serverless-flask
  apiName: ultimate-myillini-restful
  profile: chenhui-admin

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: GET /doc
      - http: GET /search
      - http: GET /usrSchedule/{email}
        request:
          parameters:
            path:
              email: true
            querystrings:
              crn: true
      - http: GET /usrSchedule/{email}/{term}
        request:
          parameters:
            path:
              email: true
              term: true
      - http: GET /usrSchedule/{email}
        request:
          parameters:
            path:
              email: true
      - http: GET /rating
        request:
          parameters:
            querystrings:
              name: true
      - http: GET /comment/name/{name}
        request:
          parameters:
            path:
              name: true
            querystrings:
              limit: true
      - http: GET /comment/class/{class}
        request:
          parameters:
            path:
              class: true
            querystrings:
              limit: true
      - http: PUT /wechat/link/{email}
        request:
          parameters:
            path:
              email: true
            querystrings:
              wxid: true
      - http: GET /wechat/email/{wxid}
        request:
          parameters:
            path:
              wxid: true
      - http: GET /wechat/room/find
        request:
          parameters:
            querystrings:
              subject: true
              course: true
              term: true
      - http: POST /wechat/room/create
        request:
          parameters:
            schema:
              appcilation/json: ${file(static/create_room_schema.json)}
      - http: POST /difficulty/{email}
        request:
          parameters:
            path:
              email: true
            schema:
              appcilation/json: ${file(static/get_difficulty_schema.json)}
      - http: POST /difficulty/{email}/breakdown
        request:
          parameters:
            path:
              email: true
            schema:
              appcilation/json: ${file(static/get_difficulty_breakdown_schema.json)}
      - http: PUT /usrSchedule/{email}
        request:
          parameters:
            path:
              email: true
            querystrings:
              crn: true
      - http: PUT /usrSchedule/{email}/{term}
        request:
          parameters:
            path:
              email: true
            querystrings:
              crn: true
      - http: DELETE /usrSchedule/{email}
        request:
          parameters:
            path:
              email: true
            querystrings:
              crn: true
      - http: DELETE /usrSchedule/{email}/{term}
        request:
          parameters:
            path:
              email: true
            querystrings:
              crn: true
      - http: GET /clsSchedule/{cls_code}/{term}
        request:
          parameters:
            path:
              cls_code: true
              term: term
      - http: GET /clsSchedule/{cls_code}
        request:
          parameters:
            path:
              cls_code: true
      - http: PUT /user/{email}
        request:
          parameters:
            path:
              email: true
            querystrings:
              name: true
      - http: POST /remark/{email}
        request:
          parameters:
            path:
              email: true
            schema:
              appcilation/json: ${file(static/get_remark_schema.json)}
      - http: POST /remark/{email}/add
        request:
          parameters:
            path:
              email: true
            schema:
              appcilation/json: ${file(static/add_remark_schema.json)}
      - http: POST /remark/{email}/modify
        request:
          parameters:
            path:
              email: true
            schema:
              appcilation/json: ${file(static/modify_remark_schema.json)}
      - http: POST /gpa/raw
        request:
          parameters:
            schema:
              appcilation/json: ${file(static/get_raw_gpa_info_schema.json)}
      - http: PUT /test
    environment:
      MYSQL_WRITER_HOST: ${param:MYSQL_WRITER_HOST}
      MYSQL_USER: ${param:MYSQL_USER}
      MYSQL_PASSWD: ${param:MYSQL_PASSWD}
      MYSQL_PORT: ${param:MYSQL_PORT}
      MYSQL_DEFAULT_DB: ${param:MYSQL_DEFAULT_DB}
      API_KEY: ${param:API_KEY}
      ES_ENDPOINT: ${param:ES_ENDPOINT}
    vpc:
      securityGroupIds:
        - ${param:SECURITY_GROUP}
      subnetIds:
        - ${param:SUBNET_ID_1}
        - ${param:SUBNET_ID_2}
        - ${param:SUBNET_ID_3}

package:
  include:
    - src/**
  exclude:
    - node_modules/**
    - venv/**

custom:
  wsgi:
    app: src.api.app
    pythonBin: python3 # Some systems with Python3 may require this
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

plugins:
  - serverless-wsgi
  - serverless-python-requirements